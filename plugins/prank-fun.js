const { cmd } = require('../command');

cmd({
    pattern: "hack",
    desc: "Realistic and stylish fake hacking simulation.",
    category: "fun",
    filename: __filename
},
async (conn, mek, m, { 
    from, quoted, isOwner, reply 
}) => {
    try {
        if (!isOwner) {
            return reply("‚õî Only the *bot owner* can run this command.");
        }

        const steps = [
            'üß† *Booting NEXI MD OS v9.8.3...*',
            'üíª Connecting to the cyber grid...',
            'üîç Target locked: _Accessing private node..._',
            'üì° Establishing connection to secure mainframe...',
            'üß¨ Injecting malware... [OK]',
            '‚öôÔ∏è Deploying brute-force algorithms...',
            'üîì üîì Bypassing firewall... [SUCCESS]',
            'üìÇ Accessing encrypted files...',
            'üìÅ Downloading credentials: [admin.passwd]...',
            '‚åõ Cracking SHA-256 hash... [‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] 23%',
            '‚åõ Cracking SHA-256 hash... [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë] 67%',
            '‚åõ Cracking SHA-256 hash... [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 100%',
            'üì¨ Sending payload to control node...',
            'üíæ Saving data to /root/asuna/leak.log',
            'üì§ Uploading to darkweb database...',
            'üéØ Breach successful!',
            'üåê Target is now fully compromised.',
            'üëæ Activating self-destruct protocol in 3... 2... 1...',
            'üí• *Trace erased.*',
            'üß™ All evidence deleted. You were never here.',
            '‚úÖ *NEXI MD HACKING COMPLETE!* ‚ò£Ô∏è',
            '‚ö†Ô∏è _Note: This is a fake simulation for fun. Do not take it seriously._'
        ];

        for (const line of steps) {
            await conn.sendMessage(from, { text: line }, { quoted: mek });
            await new Promise(resolve => setTimeout(resolve, 1000)); // 1s delay for realism
        }

    } catch (e) {
        console.error(e);
        reply(`‚ùå *Error:* ${e.message}`);
    }
});
